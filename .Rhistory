shiny::runApp()
runApp()
tweets <- vroom(here("data-raw","tweets.csv"))
library(knitr)
library(tidyr)
library(dplyr)
library(readr)
library(ggplot2)
library(tibble)
library(stringr)
library(gridExtra)
library(scales)
library(lubridate)
library(ggrepel)
library(kableExtra)
library(tm)
library(wordcloud)
library(tidytext)
library(broom)
library(topicmodels)
library(here)
library(vroom)
tweets <- vroom(here("data-raw","tweets.csv"))
tweets <- vroom(here("tweets.csv"))
library(knitr)
library(tidyr)
library(dplyr)
library(readr)
library(ggplot2)
library(tibble)
library(stringr)
library(gridExtra)
library(scales)
library(lubridate)
library(ggrepel)
library(kableExtra)
library(tm)
library(wordcloud)
library(tidytext)
library(broom)
library(topicmodels)
library(here)
library(vroom)
tweets <- vroom(here("tweets.csv"))
tweets <- vroom(here("Data&Clasifier",tweets.csv"))
tweets <- vroom(here("Data&Clasifier",tweets.csv"))
tweets <- vroom(here("Data&Clasifier","tweets.csv"))
tweets$time <- ymd_hms(tweets$time)
library(knitr)
library(tidyr)
library(dplyr)
library(readr)
library(ggplot2)
library(tibble)
library(stringr)
library(gridExtra)
library(scales)
library(lubridate)
library(ggrepel)
library(kableExtra)
library(tm)
library(wordcloud)
library(tidytext)
library(broom)
library(topicmodels)
library(here)
library(vroom)
tweets <- vroom(here("Data&Clasifier","tweets.csv"))
tweets$time <- ymd_hms(tweets$time)
kable(tweets %>% group_by(lang) %>% count() %>% rename(Language = lang, 'Number of Tweets' = n))
kable(tweets %>% group_by(lang) %>% count() %>% rename(Language = lang, 'Number of Tweets' = n))
tweets <- tweets %>% filter(lang != "es")
tweets$handle <- sub("realDonaldTrump", "Trump", tweets$handle)
tweets$handle <- sub("HillaryClinton", "Clinton", tweets$handle)
tweets$is_retweet <- as.logical(tweets$is_retweet)
kable(tweets %>% filter(is_retweet==FALSE) %>% group_by(handle) %>% count())
library(knitr)
library(tidyr)
library(dplyr)
library(readr)
library(ggplot2)
library(tibble)
library(stringr)
library(gridExtra)
library(scales)
library(lubridate)
library(ggrepel)
library(kableExtra)
library(tm)
library(wordcloud)
library(tidytext)
library(broom)
library(topicmodels)
library(here)
library(vroom)
tweets <- vroom(here("Data&Clasifier","tweets.csv"))
tweets$time <- ymd_hms(tweets$time)
kable(tweets %>% group_by(lang) %>% count() %>% rename(Language = lang, 'Number of Tweets' = n))
tweets <- tweets %>% filter(lang != "es")
tweets$handle <- sub("realDonaldTrump", "Trump", tweets$handle)
tweets$handle <- sub("HillaryClinton", "Clinton", tweets$handle)
tweets$is_retweet <- as.logical(tweets$is_retweet)
kable(tweets %>% filter(is_retweet==FALSE) %>% group_by(handle) %>% count())
p1 <- tweets %>% filter(original_author != "") %>% group_by(original_author) %>% count() %>% filter(n>=5) %>% arrange(desc(n)) %>% ungroup()
runApp()
runApp()
runApp()
runApp()
runApp()
g2 <- ggplot(p1, aes(x=reorder(original_author, n), y=n)) +
geom_bar(stat="identity", fill="darkgreen") + coord_flip() +
labs(x="", y="number of tweets retweeted by either Trump or Clinton") +
theme(legend.position = "none")
library(knitr)
library(tidyr)
library(dplyr)
library(readr)
library(ggplot2)
library(tibble)
library(stringr)
library(gridExtra)
library(scales)
library(lubridate)
library(ggrepel)
library(kableExtra)
library(tm)
library(wordcloud)
library(tidytext)
library(broom)
library(topicmodels)
library(here)
library(vroom)
tweets <- vroom(here("Data&Clasifier","tweets.csv"))
tweets$time <- ymd_hms(tweets$time)
kable(tweets %>% group_by(lang) %>% count() %>% rename(Language = lang, 'Number of Tweets' = n))
tweets <- tweets %>% filter(lang != "es")
tweets$handle <- sub("realDonaldTrump", "Trump", tweets$handle)
tweets$handle <- sub("HillaryClinton", "Clinton", tweets$handle)
tweets$is_retweet <- as.logical(tweets$is_retweet)
kable(tweets %>% filter(is_retweet==FALSE) %>% group_by(handle) %>% count())
p1 <- tweets %>% filter(original_author != "") %>% group_by(original_author) %>% count() %>% filter(n>=5) %>% arrange(desc(n)) %>% ungroup()
g2 <- ggplot(p1, aes(x=reorder(original_author, n), y=n)) +
geom_bar(stat="identity", fill="darkgreen") + coord_flip() +
labs(x="", y="number of tweets retweeted by either Trump or Clinton") +
theme(legend.position = "none")
g2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
kable(tweets %>% filter(is_retweet==FALSE) %>% group_by(handle) %>% count())
tweets$original_author <- ifelse(tweets$original_author != "", tweets$original_author, tweets$handle)
table1<-kable(head(tweets %>% select(original_author, handle, text), 20), format = "html") %>%
kable_styling() %>%
column_spec(1, bold = T, width = "2cm", border_right = T) %>%
column_spec(2, bold = T, width = "2cm", border_right = T) %>%
column_spec(3, width = "19cm")
table1
runApp()
runApp()
library(knitr)
library(tidyr)
library(dplyr)
library(readr)
library(ggplot2)
library(tibble)
library(stringr)
library(gridExtra)
library(scales)
library(lubridate)
library(ggrepel)
library(kableExtra)
library(tm)
library(wordcloud)
library(tidytext)
library(broom)
library(topicmodels)
library(here)
library(vroom)
tweets <- vroom(here("Data&Clasifier","tweets.csv"))
tweets$time <- ymd_hms(tweets$time)
kable(tweets %>% group_by(lang) %>% count() %>% rename(Language = lang, 'Number of Tweets' = n))
tweets <- tweets %>% filter(lang != "es")
tweets$handle <- sub("realDonaldTrump", "Trump", tweets$handle)
tweets$handle <- sub("HillaryClinton", "Clinton", tweets$handle)
tweets$is_retweet <- as.logical(tweets$is_retweet)
kable(tweets %>% filter(is_retweet==FALSE) %>% group_by(handle) %>% count())
tweets$author <- ifelse(tweets$original_author != "", tweets$original_author, tweets$handle)
table1<-kable(head(tweets %>% select(author, handle, text), 20), format = "html") %>%
kable_styling() %>%
column_spec(1, bold = T, width = "2cm", border_right = T) %>%
column_spec(2, bold = T, width = "2cm", border_right = T) %>%
column_spec(3, width = "19cm")
table1
tweets$author <- ifelse(tweets$original_author != "", tweets$original_author, tweets$handle)
table1<-kable(head(tweets %>% select(author, handle, text), 20), format = "html") %>%
kable_styling() %>%
column_spec(1, bold = T, width = "2cm", border_right = T) %>%
column_spec(2, bold = T, width = "2cm", border_right = T) %>%
column_spec(3, width = "19cm")
table1
tweets <- mutate(author = ifelse(tweets$original_author!= "", tweets$original_author, tweets$handle))
table1<-kable(head(tweets %>% select(author, handle, text), 20), format = "html") %>%
kable_styling() %>%
column_spec(1, bold = T, width = "2cm", border_right = T) %>%
column_spec(2, bold = T, width = "2cm", border_right = T) %>%
column_spec(3, width = "19cm")
table1
tweets <- mutate(author = ifelse(tweets$original_author = "", tweets$original_author, tweets$handle))
table1<-kable(head(tweets %>% select(author, handle, text), 20), format = "html") %>%
kable_styling() %>%
column_spec(1, bold = T, width = "2cm", border_right = T) %>%
column_spec(2, bold = T, width = "2cm", border_right = T) %>%
column_spec(3, width = "19cm")
table1
tweets$author <- ifelse(tweets$original_author != "", tweets$original_author, tweets$handle)
kable(head(tweets %>% select(author, handle, text), 20), format = "html") %>%
kable_styling() %>%
column_spec(1, bold = T, width = "2cm", border_right = T) %>%
column_spec(2, bold = T, width = "2cm", border_right = T) %>%
column_spec(3, width = "19cm")
runApp()
runApp()
runApp()
runApp()
tweets <- tweets %>% rename (doc_id = id)
ClintonTweets <- tweets %>% filter(is_retweet=="FALSE" & handle=="Clinton")
TrumpTweets <- tweets %>% filter(is_retweet=="FALSE" & handle=="Trump")
TrumpCorpus <- DataframeSource(TrumpTweets)
TrumpCorpus <- VCorpus(TrumpCorpus)
ClintonCorpus <- DataframeSource(ClintonTweets)
ClintonCorpus <- VCorpus(ClintonCorpus)
inspect(TrumpCorpus[1:2])
CleanCorpus <- function(x){
x <- tm_map(x, content_transformer(tolower))
x <- tm_map(x, removeNumbers) #remove numbers before removing words. Otherwise "trump2016" leaves "trump"
x <- tm_map(x, removeWords, tidytext::stop_words$word)
x <- tm_map(x, removePunctuation)
x <- tm_map(x, stripWhitespace)
return(x)
}
RemoveNames <- function(x) {
x <- tm_map(x, removeWords, c("donald", "hillary", "clinton", "trump", "realdonaldtrump", "hillaryclinton"))
return(x)
}
CreateTermsMatrix <- function(x) {
x <- TermDocumentMatrix(x)
x <- as.matrix(x)
y <- rowSums(x)
y <- sort(y, decreasing=TRUE)
return(y)
}
TrumpCorpus <- CleanCorpus(TrumpCorpus)
TermFreqTrump <- CreateTermsMatrix(TrumpCorpus)
content(TrumpCorpus[[1]])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("textdata")
runApp()
runApp()
runApp()
runApp()
runApp()
